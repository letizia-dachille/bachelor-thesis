//Confronto con algoritmo euclideo - Instabilit√† numerica

use P::=QQ[x1];
I1:=ideal(x1^8+x1^6-3*x1^4-3*x1^3+8*x1^2+2*x1-5,3*x1^6+5*x1^4-4*x1^2-9*x1+21);
L1:=gens(I1);
ReducedGBasis(I1);

//Confronto con algoritmo euclideo - Passi algoritmo di Buchberger

I2:=ideal(x1^5+x1^3+4*x1^2-6*x1+12,x1^4-x1^3-3*x1-9);
L2:=gens(I2);
ReducedGBasis(I2);

G1:= L2[1];
G2:= L2[2];

S := (lcm(LT(G1),LT(G2))/LM(G1))*G1-(lcm(LT(G1),LT(G2))/LM(G2))*G2;

//NR(S,L2);
G3:=0;;
while S<>0 do
	Flag := 0;
	foreach G in L2 do
		If (IsDivisible(LT(S),LT(G))) Then
			Flag := 1;
			S := S - ((LM(S))/(LM(G)))*G;
		EndIf;
		If Flag = 1 Then
			break;
		EndIf;
	endforeach;
	If Flag = 0 Then
		G3 := G3 + LM(S);
		S := S - LM(S);
	EndIf;
EndWhile;

append(ref L2, G3);

//Esempio di passo trascurabile

//S := (lcm(LT(G1),LT(G3))/LM(G1))*G1-(lcm(LT(G1),LT(G3))/LM(G3))*G3;

//NR(S,L2);
//G4:=0;;
//while S<>0 do
//	Flag := 0;
//	foreach G in L2 do
//		If (IsDivisible(LT(S),LT(G))) Then
//			Flag := 1;
//			S := S - ((LM(S))/(LM(G)))*G;
//		EndIf;
//		If Flag = 1 Then
//			break;
//		EndIf;
//	endforeach;
//	If Flag = 0 Then
//		G4 := G4 + LM(S);
//		S := S - LM(S);
//	EndIf;
//EndWhile;

//append(ref L2, G4);

S := (lcm(LT(G2),LT(G3))/LM(G2))*G2-(lcm(LT(G2),LT(G3))/LM(G3))*G3;

//NR(S,L2);
G5:=0;;
while S<>0 do
	Flag := 0;
	foreach G in L2 do
		If (IsDivisible(LT(S),LT(G))) Then
			Flag := 1;
			C:=((LM(S))/(LM(G)));;
			S := S - ((LM(S))/(LM(G)))*G;
		EndIf;
		If Flag = 1 Then
			break;
		EndIf;
	endforeach;
	If Flag = 0 Then
		G5 := G5 + LM(S);
		S := S - LM(S);
	EndIf;
EndWhile;

append(ref L2, G5);

S := (lcm(LT(G3),LT(G5))/LM(G3))*G3-(lcm(LT(G3),LT(G5))/LM(G5))*G5;

//NR(S,L2);
G6:=0;;
while S<>0 do
	Flag := 0;
	foreach G in L2 do
		If (IsDivisible(LT(S),LT(G))) Then
			Flag := 1;
			S := S - ((LM(S))/(LM(G)))*G;
		EndIf;
		If Flag = 1 Then
			break;
		EndIf;
	endforeach;
	If Flag = 0 Then
		G6 := G6 + LM(S);
		S := S - LM(S);
	EndIf;
EndWhile;